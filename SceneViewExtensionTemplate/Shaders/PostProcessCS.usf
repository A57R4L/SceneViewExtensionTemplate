// Custom SceneViewExtension Template for Unreal Engine
// Copyright 2023 - 2025 Ossi Luoto
// 
// Custom CS PostProcessing Shader

#include "/Engine/Public/Platform.ush"
#include "/Engine/Private/Common.ush"
#include "/Engine/Private/ScreenPass.ush"

// Shader parameters

// SceneColor texture
Texture2D OriginalSceneColor;

// SceneColor Viewport parameters
SCREEN_PASS_TEXTURE_VIEWPORT(SceneColorViewport)

// Output
RWTexture2D<float4> Output;

// Compute Shader code
[numthreads(THREADS_X, THREADS_Y, THREADS_Z)]
void MainCS(uint2 DispatchThreadId : SV_DispatchThreadID)
{
	// Check that we are in scope
    if (any(DispatchThreadId >= SceneColorViewport_ViewportMax))
    {
        return;
    }
	
    // Calculate SampleUV with viewport parameters
    float2 sampleUV = (float2(SceneColorViewport_ViewportMin) + (DispatchThreadId + 0.5)) * SceneColorViewport_ExtentInverse;

    // sample OriginalColor
    float4 OriginalColor = OriginalSceneColor.SampleLevel(GlobalPointClampedSampler, sampleUV, 0);

    // To test that everything is working, switch Red and Blue
    float4 OutputColor = float4(OriginalColor.z, OriginalColor.y, OriginalColor.x, OriginalColor.w);

    // Write output
    Output[SceneColorViewport_ViewportMin + DispatchThreadId] = OutputColor;
}
